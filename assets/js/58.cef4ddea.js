(window.webpackJsonp=window.webpackJsonp||[]).push([[58],{374:function(a,t,e){"use strict";e.r(t);var s=e(12),v=Object(s.a)({},(function(){var a=this,t=a._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h2",{attrs:{id:"pnpm"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#pnpm"}},[a._v("#")]),a._v(" pnpm")]),a._v(" "),t("h3",{attrs:{id:"原理图"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#原理图"}},[a._v("#")]),a._v(" 原理图")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://cdn.lijiaming.top//img/b97b5fcea5844fd78ba4c76a115ac044~tplv-k3u1fbpfcp-zoom-in-crop-mark:4536:0:0:0.awebp",alt:"img"}})]),a._v(" "),t("h3",{attrs:{id:"node-modules-历史过程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#node-modules-历史过程"}},[a._v("#")]),a._v(" node_modules 历史过程")]),a._v(" "),t("p",[a._v("1、 "),t("code",[a._v("npm@2.x")]),a._v(" 为树的时候，问题太大了")]),a._v(" "),t("p",[a._v("2、"),t("code",[a._v("npm@3")]),a._v(" 把包打平，出现了幻影依赖")]),a._v(" "),t("h4",{attrs:{id:"幻影依赖"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#幻影依赖"}},[a._v("#")]),a._v(" 幻影依赖")]),a._v(" "),t("p",[a._v("安装了 "),t("code",[a._v("a")]),a._v(" 包， "),t("code",[a._v("a")]),a._v(" 隐形依赖 "),t("code",[a._v("b")]),a._v("、"),t("code",[a._v("c")]),a._v("，在安装 "),t("code",[a._v("a")]),a._v(" 的时候也一起安装了，此时，项目中引入 "),t("code",[a._v("b")]),a._v("、"),t("code",[a._v("c")]),a._v(" 是可以引入的，但是并没有在 "),t("code",[a._v("package")]),a._v(" 中声明")]),a._v(" "),t("h3",{attrs:{id:"常用命令"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#常用命令"}},[a._v("#")]),a._v(" 常用命令")]),a._v(" "),t("p",[a._v("1、pnpm install ：安装依赖\n2、pnpm update ：更新依赖，根据指定的范围将包更新到最新版本，monorepo 项目中可以通过 --filter 来指定更新某个项目的某个包\n3、pnpm uninstall ：删除依赖，根据指定的范围将包删除，monorepo 项目中可以通过 --filter 来指定删除某个项目的某个包\n4、pnpm add：添加包")])])}),[],!1,null,null,null);t.default=v.exports}}]);